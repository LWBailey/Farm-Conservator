@model SLUIDBModels.FarmModel


@{
    ViewBag.Title = "Edit";
    ViewBag.FarmID = Model.ID;
}

<h2>Edit</h2>

@using (Html.BeginForm("UpdateFarm", "Farm"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Model.FarmName</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)


    <div class="form-group">
        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FarmName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FarmName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Priority", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Priority, new SelectList(ViewBag.PriorityList), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Date Created", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CreationDate, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.ObjectID)
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.Contacts)
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.Plans)
    </div>

    <h3> Contacts </h3>
    
    <table class="table">

        <tr>
            <th>
                @Html.DisplayName("IRISID")
            </th>
            <th>
                @Html.DisplayName("First Name")
            </th>
            <th>
                @Html.DisplayName("Last Name")
            </th>

            <th>
                @Html.DisplayName("Address")
            </th>

            <th>
                @Html.DisplayName("Email")
            </th>

            <th>
                @Html.DisplayName("Phone Number")
            </th>
            <th>
                @Html.DisplayName("Contact Type")
            </th>
        </tr>
        @if (Model.Contacts != null)
        {
            foreach (var item in Model.Contacts)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.IRISID.ToString(), "NavigateToIRISContactScreen", "Farm", new { IRISID = item.IRISID}, new { @class = "LinkButton" })
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ContactName.Split('|')[0])
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContactName.Split('|')[item.ContactName.Split('|').Length - 1])
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PrimaryAddress)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PrimaryEmail)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PrimaryPhone)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ContactType)
                    </td>
                    <td>
                        @Html.ActionLink("Remove", "RemoveContact", "Contact", new { farmID = Model.ID, ContactIRISID = item.IRISID }, new { @class = "DeleteButton" })
                    </td>
                </tr>
            }
        }
    </table>
    <p>  @Html.ActionLink("Add Contact", "StartSearch", "Contact", new { ObjectID = Model.ObjectID }, new { @class = "AddButton" })</p>
    <br />
    <br />
    <br />
    <input type="submit" value="Save" id="btnSubmit" class="LinkButton"/>

</div>
<br />
    <br />
    if(ViewBag.Message != null)
    {
        
        @ViewBag.Message

    }

}
